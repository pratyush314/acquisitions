version: '3.8'

services:
  # Application service for production
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: acquisitions-app-prod
    ports:
      - '3000:3000'
    env_file:
      - .env.production
    volumes:
      # Only mount logs in production
      - ./logs:/app/logs
      # Optional: Mount SSL certificates if needed
      # - ./certs:/app/certs:ro
    networks:
      - acquisitions-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "const http = require('http'); http.get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }).on('error', () => process.exit(1));",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: acquisitions-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./certs:/etc/nginx/certs:ro
    depends_on:
      - app
    networks:
      - acquisitions-network
    restart: unless-stopped
    profiles:
      - proxy # Only start with --profile proxy

  # Optional: Log aggregation
  fluentd:
    image: fluent/fluentd:v1.16-1
    container_name: acquisitions-fluentd
    volumes:
      - ./logs:/fluentd/log
      - ./fluent.conf:/fluentd/etc/fluent.conf:ro
    networks:
      - acquisitions-network
    profiles:
      - logging # Only start with --profile logging

networks:
  acquisitions-network:
    driver: bridge
    name: acquisitions-prod-network
